From 7e5f1ec6bc9b60a67a4abd1d432e502e2bf41ca3 Mon Sep 17 00:00:00 2001
From: David Greaves <david.greaves@jolla.com>
Date: Tue, 26 May 2020 13:02:35 +0100
Subject: [PATCH] use python3

2to3 conversion
M2Crypto uses bytes so the ord() is superfluous

Signed-off-by: David Greaves <david.greaves@jolla.com>
---
 utils/key2pub.py | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/utils/key2pub.py b/utils/key2pub.py
index 9bb04cd..2d853ff 100755
--- a/utils/key2pub.py
+++ b/utils/key2pub.py
@@ -1,9 +1,9 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 import sys
 try:
        from M2Crypto import RSA
-except ImportError, e:
+except ImportError as e:
        sys.stderr.write('ERROR: Failed to import the "M2Crypto" module: %s\n' % e.message)
        sys.stderr.write('Please install the "M2Crypto" Python module.\n')
        sys.stderr.write('On Debian GNU/Linux the package is called "python-m2crypto".\n')
@@ -24,7 +24,7 @@ def print_ssl_64(output, name, val):
     for v1, v2, v3, v4, v5, v6, v7, v8 in vnew:
         if not idx:
             output.write('\t')
-        output.write('0x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x, ' % (ord(v1), ord(v2), ord(v3), ord(v4), ord(v5), ord(v6), ord(v7), ord(v8)))
+        output.write('0x%.2x%.2x%.2x%.2x%.2x%.2x%.2x%.2x, ' % (v1, v2, v3, v4, v5, v6, v7, v8))
         idx += 1
         if idx == 2:
             idx = 0
@@ -48,7 +48,7 @@ def print_ssl_32(output, name, val):
     for v1, v2, v3, v4 in vnew:
         if not idx:
             output.write('\t')
-        output.write('0x%.2x%.2x%.2x%.2x, ' % (ord(v1), ord(v2), ord(v3), ord(v4)))
+        output.write('0x%.2x%.2x%.2x%.2x, ' % (v1, v2, v3, v4))
         idx += 1
         if idx == 4:
             idx = 0
@@ -80,7 +80,7 @@ struct pubkey {
 
 static struct pubkey keys[] = {
 ''')
-    for n in xrange(n + 1):
+    for n in range(n + 1):
         output.write('	KEYS(e_%d, n_%d),\n' % (n, n))
     output.write('};\n')
     pass
@@ -94,7 +94,7 @@ def print_gcrypt(output, name, val):
     for v in val:
         if not idx:
             output.write('\t')
-        output.write('0x%.2x, ' % ord(v))
+        output.write('0x%.2x, ' % v)
         idx += 1
         if idx == 8:
             idx = 0
@@ -117,7 +117,7 @@ struct key_params {
 
 static const struct key_params __attribute__ ((unused)) keys[] = {
 ''')
-    for n in xrange(n + 1):
+    for n in range(n + 1):
         output.write('	KEYS(e_%d, n_%d),\n' % (n, n))
     output.write('};\n')
     
@@ -135,7 +135,7 @@ except IndexError:
     mode = None
 
 if not mode in modes:
-    print 'Usage: %s [%s] input-file... output-file' % (sys.argv[0], '|'.join(modes.keys()))
+    print('Usage: %s [%s] input-file... output-file' % (sys.argv[0], '|'.join(list(modes.keys()))))
     sys.exit(2)
 
 output = open(outfile, 'w')

base-commit: 067d961a344b4a2b2c374cfba5a632f0652971e2
-- 
2.20.1

